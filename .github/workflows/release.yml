
name: ReleaseCI

on:
  push:
    tags:
    - 'release-[0-9]+'
    - 'rc-[0-9]+'
    - 'dev-[0-9]+'
    - 'stable-[0-9]+'

jobs:
  build:
    if: github.event.base_ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    env:
      IMAGE: eisengrind/altv-voice-server
    steps:
    - uses: actions/checkout@v2
      name: checkout
    - name: install deps
      run: sudo apt-get update && sudo apt-get install -y jq wget
    - name: build & push voice server images
      run: |
        echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

        tag=${GITHUB_REF##*/}
        splitTag=(${tag//-/ })
        BRANCH=${splitTag[0]}
        BUILD=${splitTag[1]}

        docker build . --build-arg BRANCH=$BRANCH -t $IMAGE:$BUILD
        docker tag $IMAGE:$BUILD $IMAGE:$BRANCH

        docker build . -f ./dotnet.Dockerfile --build-arg BUILD=$BUILD --build-arg BRANCH=$BRANCH -t $IMAGE:$BUILD-dotnet
        docker tag $IMAGE:$BUILD-dotnet $IMAGE:$BRANCH-dotnet

        docker build . -f ./nodejs.Dockerfile --build-arg BUILD=$BUILD --build-arg BRANCH=$BRANCH -t $IMAGE:$BUILD-nodejs
        docker tag $IMAGE:$BUILD-nodejs $IMAGE:$BRANCH-nodejs

        docker build . -f ./nodejs-dotnet.Dockerfile --build-arg BUILD=$BUILD-dotnet --build-arg BRANCH=$BRANCH -t $IMAGE:$BUILD-nodejs-dotnet
        docker tag $IMAGE:$BUILD-nodejs-dotnet $IMAGE:$BRANCH-nodejs-dotnet

        docker push $IMAGE:$BUILD
        docker push $IMAGE:$BRANCH

        docker push $IMAGE:$BRANCH-dotnet
        docker push $IMAGE:$BUILD-dotnet

        docker push $IMAGE:$BUILD-nodejs
        docker push $IMAGE:$BRANCH-nodejs

        docker push $IMAGE:$BUILD-nodejs-dotnet
        docker push $IMAGE:$BRANCH-nodejs-dotnet

        docker logout
