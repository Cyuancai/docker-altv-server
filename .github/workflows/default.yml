name: DefaultCI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: []

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  default-build:
    if: ${{!startsWith(github.ref, 'refs/tags/')}}
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      IMAGE: eisengrind/altv-server

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
      name: checkout
    - name: install deps
      run: sudo apt-get update && sudo apt-get install -y jq wget
    - name: build & push voice server images
      run: |
        echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

        # stable does not exist yet
        for BRANCH in stable dev rc release
        do
          BUILD=$(wget --no-cache -qO- http://cdn.altv.mp/server/${BRANCH}/x64_linux/update-info.json | jq '.latestBuildNumber')

          docker build . --build-arg BRANCH=$BRANCH -t $IMAGE:$BUILD
          docker tag $IMAGE:$BUILD $IMAGE:$BRANCH

          docker build . -f ./dotnet.Dockerfile --build-arg BUILD=$BUILD --build-arg BRANCH=$BRANCH -t $IMAGE:$BUILD-dotnet
          docker tag $IMAGE:$BUILD-dotnet $IMAGE:$BRANCH-dotnet

          docker build . -f ./nodejs.Dockerfile --build-arg BUILD=$BUILD --build-arg BRANCH=$BRANCH -t $IMAGE:$BUILD-nodejs
          docker tag $IMAGE:$BUILD-nodejs $IMAGE:$BRANCH-nodejs

          docker build . -f ./nodejs-dotnet.Dockerfile --build-arg BUILD=$BUILD-dotnet --build-arg BRANCH=$BRANCH -t $IMAGE:$BUILD-nodejs-dotnet
          docker tag $IMAGE:$BUILD-nodejs-dotnet $IMAGE:$BRANCH-nodejs-dotnet

          docker push $IMAGE:$BUILD
          docker push $IMAGE:$BRANCH

          docker push $IMAGE:$BRANCH-dotnet
          docker push $IMAGE:$BUILD-dotnet

          docker push $IMAGE:$BUILD-nodejs
          docker push $IMAGE:$BRANCH-nodejs

          docker push $IMAGE:$BUILD-nodejs-dotnet
          docker push $IMAGE:$BRANCH-nodejs-dotnet
        done

        docker logout
